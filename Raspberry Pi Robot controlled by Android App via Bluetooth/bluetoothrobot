import bluetooth
import RPi.GPIO as GPIO  # calling for header file which helps in using GPIOs of PI
import time

GPIO.setmode(GPIO.BOARD)
GPIO.setup(11, GPIO.OUT)
GPIO.setup(13, GPIO.OUT)
GPIO.setup(15, GPIO.OUT)
GPIO.setup(16, GPIO.OUT)
GPIO.setwarnings(False)

def Forward():
    GPIO.output(11, 1)
    GPIO.output(13, 0)
    GPIO.output(15, 1)
    GPIO.output(16, 0)


def Reverse():
    GPIO.output(11, 0)
    GPIO.output(13, 1)
    GPIO.output(15, 0)
    GPIO.output(16, 1)


def Right():
    GPIO.output(11, 1)
    GPIO.output(13, 0)
    GPIO.output(15, 0)
    GPIO.output(16, 1)



def Left():
    GPIO.output(11, 0)
    GPIO.output(13, 1)
    GPIO.output(15, 1)
    GPIO.output(16, 0)


def Brake():
    GPIO.output(11, 1)
    GPIO.output(13, 1)
    GPIO.output(15, 1)
    GPIO.output(16, 1)

server_socket = bluetooth.BluetoothSocket(bluetooth.RFCOMM)

port = 1
server_socket.bind(("", port))
server_socket.listen(1)

client_socket, address = server_socket.accept()
print "Accepted connection from ", address
try:
    while 1:
        data = client_socket.recv(1024)
        print "Received: %s" % data
        if (data == "0"):
            Brake()
            print("Brake")
        if (data == "1"):
            Forward()
            print("Forward")
        if (data == "2"):
            Reverse()
            print("Reverse")
        if (data == "3"):
            print("Left")
            for x in range(1, 3 , 1):
                Left()
                time.sleep(0.1)
            Brake()
        if (data == "4"):
            print("Right")
            for x in range(1, 3 , 1):
                Right()
                time.sleep(0.1)
            Brake()
        if (data == "q"):
            Brake()
            print("Brake")
            print ("Quit")
            break

finally:
    print("Cleaning Up!")
    GPIO.cleanup()
    client_socket.close()
    server_socket.close()